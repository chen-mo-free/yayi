{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\shz\\index\\src\\views\\Recommend.vue?vue&type=template&id=085619f2&scoped=true&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\shz\\index\\src\\views\\Recommend.vue","mtime":1604115362232},{"path":"C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\shz\\index\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}