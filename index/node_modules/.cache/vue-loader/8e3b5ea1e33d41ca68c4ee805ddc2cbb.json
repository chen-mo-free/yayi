{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\上传用-html\\src\\views\\yachi\\Veneer.vue?vue&type=template&id=260a72e0&scoped=true&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\上传用-html\\src\\views\\yachi\\Veneer.vue","mtime":1604084336165},{"path":"C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\上传用-html\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}